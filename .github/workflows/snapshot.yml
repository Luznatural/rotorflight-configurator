name: Snapshot

on:
  push:
    tags:
      - 'snapshot/*'

jobs:

  android:

    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 9
        run_install: false

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'

    - name: Get pnpm store directory
      shell: bash
      run: echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.PNPM_STORE_PATH }}
        key: ${{ github.job }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml', 'cordova/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ github.job }}-pnpm-store-

    - name: Install Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: '11'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: 9123335
        packages: 'tools platform-tools platforms;android-33 build-tools;33.0.2'

    - name: Set build variables
      run: |
        echo "GIT_VER=${GITHUB_REF##*/}" >> ${GITHUB_ENV}
        cat ${GITHUB_ENV}

    - name: Update version number
      run: make version SEMVER=${{ env.GIT_VER }}

    - name: Initialise build environment
      run: make init

    - name: Build release for Android
      run: pnpm gulp redist --platform android

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: rotorflight-configurator-android-snapshot-${{ env.GIT_VER }}
        path: redist/*


  snapshot:

    runs-on: ubuntu-latest

    needs: [android]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set build variables
      run: |
        echo "GIT_VER=${GITHUB_REF##*/}" >> ${GITHUB_ENV}
        echo "GIT_TAG=${GITHUB_REF##refs/tags/}" >> ${GITHUB_ENV}
        cat ${GITHUB_ENV}

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: rotorflight-configurator-*-${{ env.GIT_VER }}
        merge-multiple: true

    - name: Create Snapshot
      run: |
        .github/scripts/extract-release-notes.py "${{ env.GIT_VER }}" Releases.md > Notes.md
        gh release create ${{ env.GIT_TAG }} --prerelease --notes-file Notes.md --title "Rotorflight Configurator Snapshot ${{ env.GIT_VER }}" rotorflight-configurator*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

